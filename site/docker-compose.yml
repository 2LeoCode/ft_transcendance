version: '3.9'

services:

  database:                                      #THE POSTGRESQL DATABASE
    image: postgres:latest
    restart: unless-stopped
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - backend
    volumes:
      - postgres:/var/lib/postgresql/data

  databaseadmin:                                 #THE DATABASE 'ADMIN GRAPHICAL INTERFACE'
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - backend
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      - database
    logging:
      driver: none


  backend:                                      #THE BACKEND SIDE OF OUR APP ITSELF :
    image: node:lts-alpine
    working_dir: /app
    environment:
      PORT: ${BACK_PORT}
    ports:
      - ${BACK_PORT}:${BACK_PORT}
    volumes:
      - ./back:/app
      - ./.env:/app/.env
    networks:
      - backend
    depends_on:
      - database
    restart: unless-stopped
    command: sh ./start.sh ${NODE_ENV}
    


  frontend:    
    image: node:lts-alpine                       #THE FRONTEND SIDE OF OUR APP ITSELF :
    working_dir: /app
    environment:
      PORT: ${FRONT_PORT}
    ports:
      - ${FRONT_PORT}:${FRONT_PORT}
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - ./front:/app
    depends_on:
      - backend
    command: sh ./start.sh ${NODE_ENV}

  test-app:
    image: node:lts-alpine                       #THE FRONTEND SIDE OF OUR APP ITSELF :
    working_dir: /app
    environment:
      PORT: ${TEST_PORT}
    ports:
      - ${TEST_PORT}:${TEST_PORT}
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - ./test:/app
    command: sh ./start.sh ${NODE_ENV}

volumes:
  postgres:

networks:
  backend:
    driver: bridge
